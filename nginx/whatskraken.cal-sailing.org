##
# You should look at the following URL's in order to grasp a solid understanding
# of Nginx configuration files in order to fully unleash the power of Nginx.
# https://www.nginx.com/resources/wiki/start/
# https://www.nginx.com/resources/wiki/start/topics/tutorials/config_pitfalls/
# https://wiki.debian.org/Nginx/DirectoryStructure
#
# In most cases, administrators will remove this file from sites-enabled/ and
# leave it as reference inside of sites-available where it will continue to be
# updated by the nginx packaging team.
#
# This file will automatically load configuration files provided by other
# applications, such as Drupal or Wordpress. These applications will be made
# available underneath a path with that package name, such as /drupal8.
#
# Please see /usr/share/doc/nginx-doc/examples/ for more detailed examples.
##

# You can move that to a different file under sites-available/ and symlink that
# to sites-enabled/ to enable it.
#
proxy_cache_path /var/cache/nginx keys_zone=krakencache:10m max_size=500m;

server {

	server_name whatskraken.cal-sailing.org;
	resolver 9.9.9.9 149.112.112.112 valid=300s ipv6=off; # Quad9 DNSw
	resolver_timeout 5s;

	location ~ {
		proxy_pass https://cal-sailing.appspot.com$request_uri;
		proxy_cache krakencache;
		proxy_cache_valid 200 1m;
		expires 1m;
	}

    listen [::]:443 ssl; # managed by Certbot
    listen 443 ssl; # managed by Certbot
    ssl_certificate /etc/letsencrypt/live/preston.guoda.bio/fullchain.pem; # managed by Certbot
    ssl_certificate_key /etc/letsencrypt/live/preston.guoda.bio/privkey.pem; # managed by Certbot
    include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; # managed by Certbot

}


server {
    server_name whatskraken.cal-sailing.org;
    listen 80;
    listen [::]:80;
    
    if ($host = whatskraken.cal-sailing.org) {
        return 301 https://$host$request_uri;
    } # managed by Certbot

    return 404; # managed by Certbot
}
